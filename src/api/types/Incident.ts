/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as DevRev from "../index";

export interface Incident extends DevRev.AtomBase {
    /** Parts to which the incident is applicable to. */
    appliesToParts?: DevRev.PartSummary[];
    /** Artifacts attached to the incident. */
    artifacts?: DevRev.ArtifactSummary[];
    /** Body of the incident. */
    body?: string;
    /** Custom fields. */
    customFields?: Record<string, unknown>;
    /** Custom schema fragments. */
    customSchemaFragments?: string[];
    /** Time when the incident was identified/reported. */
    identifiedAt?: Date;
    /** List of customers impacted due to the incident. */
    impactedCustomers?: DevRev.AccountSummary[];
    /** The users that own the incident. */
    ownedBy?: DevRev.UserSummary[];
    /** Timestamp when the incident was resolved. */
    resolvedAt?: Date;
    severity?: DevRev.EnumValue;
    stage?: DevRev.Stage;
    /**
     * Users, along with the incident commander, involved in resolving
     * incidents and handling communication.
     */
    stakeholders?: DevRev.UserSummary[];
    /** Stock schema fragment. */
    stockSchemaFragment?: string;
    /** Subtype corresponding to the custom type fragment. */
    subtype?: string;
    /** Tags associated with the object. */
    tags?: DevRev.TagWithValue[];
    /** Timestamp when the incident is expected to be resolved. */
    targetCloseDate?: Date;
    /** Title of the incident. */
    title: string;
}
